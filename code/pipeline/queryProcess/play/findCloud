#!/bin/bash
#PBS -N playClouds
#PBS -l select=1:ncpus=24:mem=500gb,walltime=72:00:00
#PBS -q bigmem

EXP_NAME=play
SOURCE_LBL="htr1a"
TARGET_LBL="venlafaxine"

module load gcc python openmpi

# Place us in the working directory
if [ -z "$PBS_O_WORKDIR" ]; then
  echo "Running from $PWD"
else
  echo "Moving to $PBS_O_WORKDIR"
  cd $PBS_O_WORKDIR
fi

# Identify the project home dir
if [ -z "$PROJ_HOME" ]; then
  echo "Searching for moliere home directory"
  PROJ_HOME=$(pwd | grep -o .*moliere)
  if [ "$PROJ_HOME" = "" ]; then
    echo "Failed to find project home"
    exit 1
  else
    echo "Found $PROJ_HOME"
  fi
fi

# add project tools to path
PATH=$PATH:$PROJ_HOME/code/components/links


DATA=$PROJ_HOME/data
NET=$DATA/network
VECS=$DATA/fastText
RES=$PROJ_HOME/results/$EXP_NAME

EDGES=$NET/final.bin.edges
LABELS=$NET/final.labels

OUT=$RES/cloud.txt
DIJK_PATH=$RES/$SOURCE_LBL---$TARGET_LBL.path

paths2Dijk -g $EDGES -p $DIJK_PATH -o $OUT -l $LABELS -v

#usage: ./paths2Dijk --graphFile=string --pathFile=string --outputFile=string --labelFile=string [options] ... 
#options:
  #-g, --graphFile     input graph (BINARY) file (string)
  #-p, --pathFile      input path file (idx) (string)
  #-o, --outputFile    Output paths and neighborhoods (string)
  #-l, --labelFile     Label file accompanying the edges file. (string)
  #-N, --cloudSetN     abstract cloud param: number of new abstracts adjacent to those on path. (unsigned int [=2000])
  #-C, --cloudSetC     abstract cloud param: number of new abstracts from keyword overlap (unsigned int [=500])
  #-K, --cloudSetK     abstract cloud param: number of new abstracts from keywords (unsigned int [=500])
  #-v, --verbose       outputs debug information
  #-?, --help          print this message
